.\" -*-nroff-*-
.\"
.\" Licensed to the Apache Software Foundation (ASF) under one
.\" or more contributor license agreements.  See the NOTICE file
.\" distributed with this work for additional information
.\" regarding copyright ownership.  The ASF licenses this file
.\" to you under the Apache License, Version 2.0 (the
.\" "License"); you may not use this file except in compliance
.\" with the License.  You may obtain a copy of the License at
.\"
.\"   http://www.apache.org/licenses/LICENSE-2.0
.\"
.\" Unless required by applicable law or agreed to in writing,
.\" software distributed under the License is distributed on an
.\" "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
.\" KIND, either express or implied.  See the License for the
.\" specific language governing permissions and limitations
.\" under the License
.\"

[NAME]
qdmanage \- A management tool for Dispatch routers.

[=DESCRIPTION]

An AMQP management client for use with qdrouterd. Sends AMQP management
operations requests and prints the response in JSON format.  This is a generic AMQP
management tool and can be used with any standard AMQP managed endpoint, not just
with qdrouter.
.PP
See <http://qpid.apache.org/components/dispatch-router/> for more
information.
.SH OPERATIONS
.TP
query [ATTR...]
Prints the named attributes of all entities. With no arguments prints all attributes.
The --type option restricts the result to entities extending the type.
.TP
create [ATTR=VALUE...]
Create a new entity with the specified attributes.
With the --stdin option, read attributes from stdin. This can be a JSON
map of attributes to create a single entity, or a JSON list of maps to create multiple entitiees.
.TP
read
Print the attributes of an entity specified by the --name or --identity options.
With the --stdin option, create entities based on data from stdin. This can be a JSON
map of attributes to create a single entity, or a JSON list of maps to create multiple entitiees.
.TP
update [ATTR=VALUE...]
Update the attributes of an existing entity.
With the --stdin option, read attributes from stdin. This can be a JSON
map of attributes to update a single entity, or a JSON list of maps to update multiple entitiees.
If an ATTR name is listed with no =VALUE, that attribute will be deleted from the entity.
.TP
delete
Delete an entity specified by the --name or --identity options.
.TP
get\-types [TYPE]
List entity types with their base types. With no arguments list all types.
.TP
get\-operations [TYPE]
List entity types with their operations. With no arguments list all types.
.TP
get\-attributes [TYPE]
List entity types with their attributes.  With no arguments list all types.
.TP
get\-annotations [TYPE]
List entity types with their annotations.  With no arguments list all types.
.TP
get\-mgmt\-nodes
List all other known management nodes connected to this one.
[EXAMPLES]
.TP
Show the logging configuratoin
qdmanage query --type=log
.TP
Change the default log level to debug
qdmanage udpdate name=log/DEFAULT level=debug
.TP
Change the MESSAGE log level to trace and direct MESSAGE logs to the file "test.log"
qdmanage udpdate name=log/MESSAGE level=trace output=test.log
.TP
Set the MESSAGE log level back to the default (delete the log/MESSAGE level attribute)
qdmanage udpdate name=log/MESSAGE level
[FILES]
.I ${QPID_DISPATCH_CONFDIR}/qdrouter.json
Management schema for qdrouterd.
.I ${QPID_DISPATCH_CONFDIR}/qdrouter.json.readme.txt
Explanation of the management schema.
[SEE ALSO]
.BR qdrouterd (8),
.BR qdstat (8),
.BR qdrouterd.conf (5)

[AUTHOR]
Apache Qpid <http://qpid.apache.org/>

[COPYRIGHT]
Copyright 2013 The Apache Software Foundation
