##
## Licensed to the Apache Software Foundation (ASF) under one
## or more contributor license agreements.  See the NOTICE file
## distributed with this work for additional information
## regarding copyright ownership.  The ASF licenses this file
## to you under the Apache License, Version 2.0 (the
## "License"); you may not use this file except in compliance
## with the License.  You may obtain a copy of the License at
##
##   http://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing,
## software distributed under the License is distributed on an
## "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
## KIND, either express or implied.  See the License for the
## specific language governing permissions and limitations
## under the License
##

##
## Container - Attributes related to the AMQP container.
##
container {
#    name:                                  # Unique name optionally assigned by user. Can be changed.
#    debugDump:                             # A file to dump debugging information that can't be logged normally.
#    workerThreads:      1                  # The number of threads that will be created to process message traffic and other application work (timers, non-amqp file descriptors, etc.) .
     containerName:      R.1-container      # The  name of the AMQP container.  If not specified, the container name will be set to a value of the container's choosing.  The automatically assigned container name is not guaranteed to be persistent across restarts of the container.
#    saslConfigName:     qdrouterd          # Name of the SASL configuration.  This string + '.conf' is the name of the configuration file.
#    saslConfigPath:                        # Absolute path to the SASL configuration file.
}

##
## Router - Tracks peer routers and computes routes to destinations.
##
router {
     name:               R.1                # Unique name optionally assigned by user. Can be changed.
#    raIntervalFlux:     4                  # Interval in seconds between Router-Advertisements sent to all routers during topology fluctuations.
#    helloInterval:      1                  # Interval in seconds between HELLO messages sent to neighbor routers.
#    area:                                  # Unused placeholder.
#    helloMaxAge:        3                  # Time in seconds after which a neighbor is declared lost if no HELLO is received.
#    remoteLsMaxAge:     60                 # Time in seconds after which link state is declared stale if no RA is received.
#    addrCount:                             # Number of addresses known to the router.
#    routerId:                              # Router's unique identity.
#    raInterval:         30                 # Interval in seconds between Router-Advertisements sent to all routers in a stable network.
#    mode:               standalone         # In standalone mode, the router operates as a single component.  It does not participate in the routing protocol and therefore will not cooperate with other routers. In interior mode, the router operates in cooperation with other interior routers in an interconnected network.  In edge mode, the router operates with an up link into an interior router network. Edge routers are typically used as connection concentrators or as security firewalls for access into the interior network.
#    nodeCount:                             # Number of known peer router nodes.
#    linkCount:                             # Number of links attached to the router node.
}

##
## Log - Configure logging for a particular module. You can use the `UPDATE` operation to change log settings while the router is running.
##
log {
#    name:                                  # Unique name optionally assigned by user. Can be changed.
     enable:             default            # Levels are: trace, debug, info, notice, warning, error, critical. The enable string is a comma-separated list of levels. A level may have a trailing '+' to enable that level and above. For example 'trace,debug,warning+' means enable trace, debug, warning, error and critical. The value 'none' means disable logging for the module. The value 'default' means use the value from the DEFAULT module.
#    timestamp:                             # Include timestamp in log messages.
     module:             DEFAULT            # Module to configure. The special module 'DEFAULT' specifies defaults for all modules.
#    source:                                # Include source file and line number in log messages.
#    output:                                # Where to send log messages. Can be 'stderr', 'syslog' or a file name.
}

##
## Listener - Listens for incoming connections to the router.
##
listener {
#    name:                                  # Unique name optionally assigned by user. Can be changed.
#    stripAnnotations:   both               # ['in', 'out', 'both', 'no'] in: Strip the dispatch router specific annotations only on ingress; out: Strip the dispatch router specific annotations only on egress; both: Strip the dispatch router specific annotations on both ingress and egress; no - do not strip dispatch router specific annotations
#    role:               normal             # The role of an established connection. In the normal role, the connection is assumed to be used for AMQP clients that are doing normal message delivery over the connection.  In the inter-router role, the connection is assumed to be to another router in the network.  Inter-router discovery and routing protocols can only be used over inter-router connections.
#    requireSsl:                            # yes: Require the use of SSL or TLS on the connection; no: Allow clients to connect without SSL or TLS.
#    saslMechanisms:                        # Comma separated list of accepted SASL authentication mechanisms.
#    maxFrameSize:       65536              # Defaults to 65536.  If specified, it is the maximum frame size in octets that will be used in the connection-open negotiation with a connected peer.  The frame size is the largest contiguous set of uninterrupted data that can be sent for a message delivery over the connection. Interleaving of messages on different links is done at frame granularity.
#    requireEncryption:                     # yes: Require the connection to the peer to be encrypted; no: Permit non-encrypted communication with the peer
#    trustedCerts:                          # This optional setting can be used to reduce the set of available CAs for client authentication.  If used, this setting must provide a path to a PEM file that contains the trusted certificates.
#    authenticatePeer:                      # yes: Require the peer's identity to be authenticated; no: Do not require any authentication.
     port:               20103              # Port number or symbolic service name.
#    addr:               127.0.0.1          # IP address: ipv4 or ipv6 literal or a host name.
     sslProfile:         sslProfile         # Name of the sslProfile section.
}

##
## Ssl Profile - Attributes for setting TLS/SSL configuration for connections. These fields are shared by listener.
##
sslProfile {
     name:               sslProfile         # Unique name that is used to refer to this set of attributes.
#    password:                              # An alternative to storing the password in a file referenced by passwordFile is to supply the password right here in the configuration file.  This option can be used by supplying the password in the 'password' option.  Don't use both password and passwordFile in the same profile.
#    keyFile:                               # The path to the file containing the PEM-formatted private key for the above certificate.
#    certDb:                                # The path to the database that contains the public certificates of trusted certificate authorities (CA).
#    passwordFile:                          # If the above private key is password protected, this is the path to a file containing the password that unlocks the certificate key.
#    certFile:                              # The path to the file containing the PEM-formatted public certificate to be used on the local end of any connections using this profile.
}

